#!/usr/bin/python

import spidev #bibliotheque SPI
import time # pour tempo 1s

# Image Perroquet full color
fp = open('testmano.digole')
# Image logo Pirok
imgpirok = [0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xec,0xff,0xff,0xff,0xf8,0x9f,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x00,0x03,0xff,0xfe,0x00,0x01,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x00,0x00,0xff,0xfc,0x00,0x00,0x3f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x08,0x00,0x1f,0xe0,0x04,0x80,0x07,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xfe,0x00,0x7f,0xf0,0x0f,0xc0,0x3f,0xf8,0x03,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xfe,0x07,0xff,0xfe,0x07,0x83,0xff,0xff,0x01,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xfe,0x3f,0xff,0xff,0xc7,0x0f,0xff,0xff,0xf1,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xfe,0x1f,0xff,0xff,0xe3,0x1f,0xff,0xff,0xe1,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xfe,0x1f,0xff,0xff,0xe2,0x1f,0xff,0xff,0xe1,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xfe,0x3f,0xff,0xff,0xf0,0x3f,0xff,0xff,0xf1,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xfe,0x3f,0xff,0xff,0xf0,0x7f,0xff,0xff,0xe1,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xfe,0x0f,0xfd,0xff,0xf8,0x7f,0xfe,0xff,0xc3,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xfe,0x1f,0xfe,0x7f,0xf8,0x7f,0xf1,0xff,0xe3,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0x1f,0xff,0x9f,0xf8,0x7f,0xe7,0xff,0xc3,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0xff,0xc7,0xf8,0x7f,0x8f,0xff,0xc7,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0xff,0xe3,0xf8,0x7e,0x3f,0xff,0xc7,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0x87,0xff,0xf8,0xf0,0x3c,0x7f,0xff,0x87,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0x83,0xff,0xfc,0x60,0x18,0xff,0xff,0x0f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xc7,0xff,0xfe,0x00,0x01,0xff,0xff,0x0f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xc1,0xff,0xff,0x00,0x03,0xff,0xfe,0x1f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0xff,0xff,0x00,0x07,0xff,0xfc,0x3f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0xff,0xff,0x00,0x03,0xff,0xfc,0x3f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x3f,0xfe,0x00,0x01,0xff,0xe0,0x7f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x1f,0xfc,0x00,0x00,0xff,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x03,0xf0,0x00,0x00,0x3f,0x03,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x0f,0x80,0x00,0x07,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x7f,0xf0,0x00,0x0f,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x03,0xe0,0xff,0xf8,0x7e,0x07,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x1f,0xf3,0xff,0xfc,0x7f,0x81,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x3f,0xe3,0xff,0xfe,0x7f,0xe1,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x7f,0xc7,0xff,0xff,0x3f,0xf0,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0xff,0x87,0xff,0xff,0x1f,0xf8,0x7f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xe1,0xff,0x03,0xff,0xfe,0x0f,0xf8,0x7f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xe1,0xfe,0x01,0xff,0xfe,0x07,0xfc,0x3f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xe3,0xfc,0x00,0xff,0xf8,0x03,0xfc,0x3f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xc3,0xf8,0x00,0x1f,0xe0,0x00,0xfe,0x3f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xc3,0xf0,0x1c,0x00,0x03,0xe0,0x7e,0x3f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xc3,0xc0,0xff,0x80,0x0f,0xfc,0x3e,0x3f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xc7,0x03,0xff,0xc0,0x1f,0xfe,0x0e,0x1f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x07,0xff,0xe0,0x3f,0xff,0x02,0x1f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x0f,0xff,0xf0,0x3f,0xff,0x80,0x0f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x0f,0xff,0xf0,0x7f,0xff,0xc0,0x07,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xfe,0x08,0x1f,0xff,0xf8,0x7f,0xff,0xc1,0x83,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xfc,0x1c,0x3f,0xff,0xf8,0x7f,0xff,0xe3,0xc1,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf8,0x3c,0x3f,0xff,0xf8,0x7f,0xff,0xe3,0xe1,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf8,0x7e,0x3f,0xff,0xf8,0x7f,0xff,0xf3,0xf0,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf8,0xfe,0x7f,0xff,0xf8,0x7f,0xff,0xf3,0xf8,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0xfe,0x7f,0xff,0xf8,0x7f,0xff,0xf3,0xf8,0x7f,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf1,0xfe,0x7f,0xff,0xf0,0x7f,0xff,0xf3,0xf8,0x7f,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf1,0xfe,0x7f,0xff,0xf0,0x3f,0xff,0xf3,0xfc,0x7f,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf1,0xfe,0x3f,0xff,0xf0,0x1f,0xff,0xe3,0xfc,0x7f,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf1,0xfc,0x3f,0xff,0xe0,0x1f,0xff,0xe3,0xfc,0x7f,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf1,0xfc,0x1f,0xff,0xc0,0x0f,0xff,0xe1,0xfc,0x7f,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf1,0xfc,0x1f,0xff,0x80,0x07,0xff,0xc1,0xfc,0x7f,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf1,0xfc,0x0f,0xff,0x00,0x03,0xff,0x81,0xf8,0x7f,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0xfc,0x07,0xfe,0x0f,0x80,0xff,0x01,0xf8,0x7f,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0xf8,0x00,0xf0,0x3f,0xf0,0x00,0x00,0xf0,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf8,0x78,0x00,0x00,0xff,0xf8,0x00,0x00,0xf0,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf8,0x70,0x00,0x01,0xff,0xfc,0x00,0x0c,0x61,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xfc,0x00,0x00,0x03,0x80,0x0e,0x00,0x3f,0x03,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xfe,0x03,0xe0,0x07,0x80,0x07,0x00,0xff,0x03,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xfe,0x07,0xf8,0x07,0x80,0x07,0x01,0xff,0x87,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0xfc,0x07,0x8f,0xc7,0x83,0xff,0x87,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0xfe,0x0f,0x8f,0xc7,0x87,0xff,0x87,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0xff,0x0f,0x80,0x0f,0x8f,0xff,0x87,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0xff,0x8f,0x80,0x0f,0x8f,0xff,0x87,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0x8f,0xff,0x87,0x8f,0x87,0x9f,0xff,0x87,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0x87,0xff,0xc7,0x8f,0xc7,0x1f,0xff,0x8f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0x87,0xff,0xc7,0x8f,0xc7,0x3f,0xff,0x8f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xc7,0xff,0xe3,0xff,0xfe,0x3f,0xff,0x0f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xc3,0xff,0xe1,0xff,0xfc,0x3f,0xff,0x1f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xc3,0xff,0xe0,0xff,0xf8,0x3f,0xfe,0x1f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xe1,0xff,0xe0,0x3f,0xf0,0x3f,0xfc,0x1f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0xff,0xe0,0x07,0x00,0x3f,0xf8,0x3f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x7f,0xe0,0x00,0x00,0x3f,0xf0,0x7f,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x1f,0xc0,0x00,0x00,0x1f,0xc0,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x03,0x80,0x1f,0xf0,0x0f,0x01,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0xff,0xfe,0x00,0x03,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x03,0xff,0xff,0x00,0x0f,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x07,0xff,0xff,0x80,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x07,0xff,0xff,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x03,0xff,0xfe,0x03,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x01,0xff,0xfe,0x07,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0xff,0xf8,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x3f,0xe0,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x00,0x01,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x07,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0x80,0x01,0xe0,0x00,0x78,0x00,0x38,0x7c,0x0c,0x00,0x18,0x00,0x17,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0x80,0x00,0xc0,0x00,0x30,0x00,0x18,0x78,0x3c,0x00,0x18,0x00,0x1f,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0x87,0xf0,0xc3,0xf8,0x30,0x7e,0x1c,0x70,0x7c,0x3f,0xff,0xc3,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0x87,0xf0,0xc3,0xfc,0x30,0xff,0xfc,0x01,0xfc,0x1f,0xff,0xc3,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0x83,0xe1,0xc3,0xfc,0x30,0xff,0xfc,0x01,0xfc,0x00,0x1f,0xc3,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0x80,0x01,0xc3,0xfc,0x30,0xff,0xfc,0x01,0xfc,0x00,0x1f,0xc3,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0x80,0x01,0xc3,0xfc,0x30,0xfe,0x0c,0x70,0x7c,0x3f,0xff,0xc3,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0x87,0xf0,0xc0,0x00,0x30,0x00,0x1c,0x78,0x3c,0x00,0x1f,0xc3,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0x87,0xf0,0xe0,0x00,0x78,0x00,0x18,0x7e,0x0c,0x00,0x0f,0xc3,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xcf,0xf9,0xf8,0x01,0xfe,0x00,0x7c,0x7f,0x0e,0x00,0x1f,0xe7,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0x8f,0x1e,0x1c,0x78,0xe1,0xc3,0x83,0xf9,0x3b,0xbf,0x3c,0xfc,0x3f,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0x9f,0x0e,0x9d,0x7b,0xe1,0xe3,0xbb,0xf8,0x3b,0xbf,0x1c,0x3b,0xbf,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0x8f,0x0e,0xfd,0x79,0xe1,0xc3,0x93,0xfa,0xbb,0x9e,0x1d,0xbd,0x3f,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff]


# Activation du bus SPI
spi = spidev.SpiDev() #nouvel objet SPI
spi.open(0,0) # sur port SPI 0 CS 0
spi.max_speed_hz = 200000 # vitesse = 200 KHz pour le digole (max 15000000)
spi.bits_per_word = 8 #8 bits per word
spi.lsbfirst = False #MSB bits
spi.mode = 0 #mode SPI O

#- Envoie une commande (string)
def sendCmd(buf):
	for c in buf:
		spi.writebytes([ord(c)])

#- Envoie une commande (valeur)
def sendVal(val):
	spi.writebytes([val])

#- Envoie plusieurs valeurs
def sendVals(val):
	for v in val:
		spi.writebytes([v])

#- Efface l'ecran		
def clearScreen():
	sendCmd("CL")

#- Affiche un texte a l'ecran
def printText(txt):
	sendCmd("TT")
	sendCmd(txt)
	sendVal(0)

#- Affiche un texte a l'ecran (avec position)
def printText(x,y,txt):
	setCursor(x,y)
	sendCmd("TT")
	sendCmd(txt)
	sendVal(0)

#- Change le curseur (position)
def setCursor(x,y):
        sendCmd("TP")
        sendVal(x)
        sendVal(y)

#- Change le curseur (pixels)
def setCursorP(x,y):
        sendCmd("ETP")
        sendVal(x)
        sendVal(y)

#- Dessine un pixel
def drawPixel(x,y):
        sendCmd("DP")
        sendVal(x)
        sendVal(y)

#- Dessine une ligne
def drawLine(x,y,x2,y2):
        sendCmd("LN")
        sendVal(x)
        sendVal(y)
        sendVal(x2)
        sendVal(y2)

#- Dessine un carre
def drawRect(x,y,x2,y2):
        sendCmd("DR")
        sendVal(x)
        sendVal(y)
        sendVal(x2)
        sendVal(y2)

#- Remplit un carre
def fillRect(x,y,x2,y2):
        sendCmd("FR")
        sendVal(x)
        sendVal(y)
        sendVal(x2)
        sendVal(y2)

#- Dessine ou remplit un cercle
def drawCircle(x,y,r,f):
        sendCmd("CC")
        sendVal(x)
        sendVal(y)
        sendVal(r)
        sendVal(f)

#- Affiche une image noir et blanc
def drawPic(x,y,w,h,data):
        sendCmd("DIM")
        sendVal(x)
        sendVal(y)
        sendVal(w)
        sendVal(h)
        sendVals(data)

#- Change la font
def setFont(f):
        sendCmd("SF")
        sendVal(f)

#- allume ou eteint l'ecran
def setScreen(on):
        sendCmd("SOO")
        sendVal(on)

#- change la couleur de dessin
def setFGcolor(c):
        sendCmd("SC")
        sendVal(c)

#- change la couleur du background
def setBGcolor():
        sendCmd("BGC")


#- change la couleur de dessin
def setDrawMode(m):
        sendCmd("DM")
        sendCmd(m)
	

#---------------------
#------ MAIN ---------
#---------------------
#clearScreen()
#setFont(6)
#printText(1,1,"HelloWorld")
#drawLine(0,0,40,40)
#time.sleep(1)

#clearScreen()
#setFont(10)
#printText(2,2,"HelloWorld")
#drawCircle(40,40,30,0)
#time.sleep(1)

#clearScreen()
#setFont(18)
#printText(3,3,"HelloWorld")
#drawRect(80,80,90,90)
#time.sleep(1)

#setScreen(0)
#sendCmd(fp.read())
#setScreen(1)

#clearScreen()
#setFGcolor(250)
#setBGcolor()
#setFGcolor(0)
#clearScreen()
#drawPic(0,0,160,128,imgpirok)

clearScreen()
setFont(6)
col = 0
for j in range (128/8):
	for i in range(160/8):
		#if(col < 256):
#			setFGcolor(col)
		if(col % 2):
			setFGcolor(0xE0)
		else:
			setFGcolor(0x03)
			
	
		fillRect(i*8,j*8,(i*8)+8,(j*8)+8)
		setFGcolor(0)
		printText(0,0,str(col))
		col = col +1
#		time.sleep(1)

clearScreen()

setScreen(0)
sendCmd(fp.read())
setScreen(1)
