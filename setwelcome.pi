#!/usr/bin/python

import spidev #bibliotheque SPI
import time # pour tempo 1s

# Image Perroquet full color
fp = open('pirok6.digole')

# Activation du bus SPI
spi = spidev.SpiDev() #nouvel objet SPI
spi.open(0,0) # sur port SPI 0 CS 0
spi.max_speed_hz = 200000 #15000000 # vitesse = 200 KHz pour le digole (max 15000000)
spi.bits_per_word = 8 #8 bits per word
spi.lsbfirst = False #MSB bits
spi.mode = 0 #mode SPI O

#- Envoie une commande (string)
def sendCmd(buf):
	for c in buf:
		spi.writebytes([ord(c)])

def sendCmd2Flash(buf,decal):
	a = decal + 1
	for c in buf:
		spi.writebytes([ord(c)])
		if(a >= 64):
			time.sleep(0.15)
			a = 1
		else:
			a = a+1
#		print a

#- Envoie une commande (valeur)
def sendVal(val):
	spi.writebytes([val])

#- Envoie plusieurs valeurs
def sendVals(val):
	for v in val:
		spi.writebytes([v])

#- Efface l'ecran		
def clearScreen():
	sendCmd("CL")

#- Affiche un texte a l'ecran
def printText(txt):
	sendCmd("TT")
	sendCmd(txt)
	sendVal(0)

#- Affiche un texte a l'ecran (avec position)
def printText(x,y,txt):
	setCursor(x,y)
	sendCmd("TT")
	sendCmd(txt)
	sendVal(0)

#- Change le curseur (position)
def setCursor(x,y):
        sendCmd("TP")
        sendVal(x)
        sendVal(y)

#- Change le curseur (pixels)
def setCursorP(x,y):
        sendCmd("ETP")
        sendVal(x)
        sendVal(y)

#- Dessine un pixel
def drawPixel(x,y):
        sendCmd("DP")
        sendVal(x)
        sendVal(y)

#- Dessine une ligne
def drawLine(x,y,x2,y2):
        sendCmd("LN")
        sendVal(x)
        sendVal(y)
        sendVal(x2)
        sendVal(y2)

#- Dessine un carre
def drawRect(x,y,x2,y2):
        sendCmd("DR")
        sendVal(x)
        sendVal(y)
        sendVal(x2)
        sendVal(y2)

#- Remplit un carre
def fillRect(x,y,x2,y2):
        sendCmd("FR")
        sendVal(x)
        sendVal(y)
        sendVal(x2)
        sendVal(y2)

#- Dessine ou remplit un cercle
def drawCircle(x,y,r,f):
        sendCmd("CC")
        sendVal(x)
        sendVal(y)
        sendVal(r)
        sendVal(f)

#- Affiche une image noir et blanc
def drawPic(x,y,w,h,data):
        sendCmd("DIM")
        sendVal(x)
        sendVal(y)
        sendVal(w)
        sendVal(h)
        sendVals(data)
#- Affiche une image NB prise d'un fichier
def drawPic2(x,y,w,h,data):
        sendCmd("DIM")
        sendVal(x)
        sendVal(y)
        sendVal(w)
        sendVal(h)
        sendCmd(data)
#Affiche une image couleur prise d'un fichier
def drawPic3(x,y,w,h,data):
        sendCmd("EDIM1")
        sendVal(x)
        sendVal(y)
        sendVal(w)
        sendVal(h)
        sendCmd(data)


#- Change la font
def setFont(f):
        sendCmd("SF")
        sendVal(f)

#- allume ou eteint l'ecran
def setScreen(on):
        sendCmd("SOO")
        sendVal(on)

#- change la couleur de dessin
def setFGcolor(c):
        sendCmd("SC")
        sendVal(c)

#- change la couleur du background
def setBGcolor():
        sendCmd("BGC")


#- change la couleur de dessin
def setDrawMode(m):
        sendCmd("DM")
        sendCmd(m)
	
#- change l'ecran d'accueil
def setWelcomeScreen1():
	sendCmd("SSS")
	bitm = fp.read()
	print "len=",len(bitm)
	sendVals([0x9C, 0x06])
	time.sleep(0.300)
	sendVals([0x06, 0x9A])
	#commandes sup:
	
	#avant:
	sendCmd("CLDIM")
	sendVal(25)
	sendVal(0)
	sendVal(110)
	sendVal(120)
	sendCmd2Flash(bitm,11)
	time.sleep(0.300)
	sendVal(255)


#---------------------
#------ MAIN ---------
#---------------------

clearScreen()

setWelcomeScreen1()
print "Done!"
time.sleep(3)
sendCmd("DSS")
sendVal(255)
print "Done DSS!"


if 0:
	setFGcolor(0)
	setBGcolor()
	clearScreen()
	setFGcolor(250)
	setBGcolor()
	setFGcolor(0)
	drawPic2(25,0,110,120,fp.read())
	setBGcolor()

	#fillRect(0,0,25,128)
	#fillRect(135,0,160,128)
	#fillRect(0,120,160,128)



