#!/usr/bin/python

import spidev #bibliotheque SPI
import time # pour tempo 1s
import socket
import fcntl
import struct

# Activation du bus SPI
spi = spidev.SpiDev() #nouvel objet SPI
spi.open(0,0) # sur port SPI 0 CS 0
spi.max_speed_hz = 200000 #15000000 # vitesse = 200 KHz pour le digole (max 15000000)
spi.bits_per_word = 8 #8 bits per word
spi.lsbfirst = False #MSB bits
spi.mode = 0 #mode SPI O

#- Envoie une commande (string)
def sendCmd(buf):
	for c in buf:
		spi.writebytes([ord(c)])

#- Envoie une commande (valeur)
def sendVal(val):
	spi.writebytes([val])

#- Envoie plusieurs valeurs
def sendVals(val):
	for v in val:
		spi.writebytes([v])

#- Efface l'ecran		
def clearScreen():
	sendCmd("CL")

#- Affiche un texte a l'ecran
def printText(txt):
	sendCmd("TT")
	sendCmd(txt)
	sendVal(0)

#- Affiche un texte a l'ecran (avec position)
def printText(x,y,txt):
	setCursorP(x,y)
	sendCmd("TT")
	sendCmd(txt)
	sendVal(0)

#- Change le curseur (position)
def setCursor(x,y):
        sendCmd("TP")
        sendVal(x)
        sendVal(y)

#- Change le curseur (pixels)
def setCursorP(x,y):
        sendCmd("ETP")
        sendVal(x)
        sendVal(y)

#- Dessine un pixel
def drawPixel(x,y):
        sendCmd("DP")
        sendVal(x)
        sendVal(y)

#- Dessine une ligne
def drawLine(x,y,x2,y2):
        sendCmd("LN")
        sendVal(x)
        sendVal(y)
        sendVal(x2)
        sendVal(y2)

#- Dessine un carre
def drawRect(x,y,x2,y2):
        sendCmd("DR")
        sendVal(x)
        sendVal(y)
        sendVal(x2)
        sendVal(y2)

#- Remplit un carre
def fillRect(x,y,x2,y2):
        sendCmd("FR")
        sendVal(x)
        sendVal(y)
        sendVal(x2)
        sendVal(y2)

#- Dessine ou remplit un cercle
def drawCircle(x,y,r,f):
        sendCmd("CC")
        sendVal(x)
        sendVal(y)
        sendVal(r)
        sendVal(f)

#- Affiche une image noir et blanc
def drawPic(x,y,w,h,data):
        sendCmd("DIM")
        sendVal(x)
        sendVal(y)
        sendVal(w)
        sendVal(h)
        sendVals(data)
#- Affiche une image NB prise d'un fichier
def drawPic2(x,y,w,h,data):
        sendCmd("DIM")
        sendVal(x)
        sendVal(y)
        sendVal(w)
        sendVal(h)
        sendCmd(data)
#Affiche une image couleur prise d'un fichier
def drawPic3(x,y,w,h,data):
        sendCmd("EDIM1")
        sendVal(x)
        sendVal(y)
        sendVal(w)
        sendVal(h)
        sendCmd(data)


#- Change la font
def setFont(f):
        sendCmd("SF")
        sendVal(f)

#- allume ou eteint l'ecran
def setScreen(on):
        sendCmd("SOO")
        sendVal(on)

#- change la couleur de dessin
def setFGcolor(c):
        sendCmd("SC")
        sendVal(c)

#- change la couleur du background
def setBGcolor():
        sendCmd("BGC")
	
#- retourne l'adresse IP du dongle Wifi
def get_ip_address(ifname):
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)

    try:
        return socket.inet_ntoa(fcntl.ioctl(
                s.fileno(),
                0x8915,  # SIOCGIFADDR
                struct.pack('256s', ifname[:15])
        )[20:24])
    except IOError:
        return "error"


#---------------------
#------ MAIN ---------
#---------------------
sendCmd("DSS")
sendVal(255)
time.sleep(1)
#erase bottom logo
setFGcolor(0)
fillRect(25,110,135,128)
time.sleep(1)
#display IP address
setFGcolor(254)
myip = get_ip_address("wlan0")
printText(30,120,myip)
#retry 5 times to display IP
for i in range(50):
	if set(myip) != set("error"):
		break
	time.sleep(5)
	myip = get_ip_address("wlan0")
	printText(10,120,str(i+2)+":")
	printText(30,120,myip)

