#!/usr/bin/python

import spidev #bibliotheque SPI
import time # pour tempo 1s
import numpy as np #bit and hex management
import random

# Parametres font / couleur
cBlanc = 254
cBleu = 0x32 #2
cRouge = 0xC4 #224
cVert = 28
fBig=200
fSmall=201

welcomelogo = [0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x7c,0x00,0x00,0x00,0x1f,0x80,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x07,0xff,0xf0,0x00,0x07,0xff,0xf0,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x7f,0xff,0xfc,0x00,0x0f,0xff,0xff,0x00,0x00,0x00,0x00
,0x00,0x00,0x03,0xff,0xdd,0xff,0x00,0x7f,0xed,0xff,0xe0,0x00,0x00,0x00
,0x00,0x00,0x07,0xf6,0x00,0x3f,0xc0,0xff,0x00,0x1f,0xf0,0x00,0x00,0x00
,0x00,0x00,0x07,0xe0,0x00,0x07,0xc1,0xf0,0x00,0x01,0xf8,0x00,0x00,0x00
,0x00,0x00,0x07,0x00,0x00,0x00,0xe3,0xc0,0x00,0x00,0x38,0x00,0x00,0x00
,0x00,0x00,0x07,0x00,0x00,0x00,0x73,0x80,0x00,0x00,0x78,0x00,0x00,0x00
,0x00,0x00,0x07,0x00,0x00,0x00,0x77,0x00,0x00,0x00,0x78,0x00,0x00,0x00
,0x00,0x00,0x07,0x00,0x00,0x00,0x3f,0x00,0x00,0x00,0x38,0x00,0x00,0x00
,0x00,0x00,0x07,0x00,0x00,0x00,0x3e,0x00,0x00,0x00,0x78,0x00,0x00,0x00
,0x00,0x00,0x07,0x00,0x08,0x00,0x1e,0x00,0x0c,0x00,0x70,0x00,0x00,0x00
,0x00,0x00,0x07,0x00,0x06,0x00,0x1e,0x00,0x18,0x00,0x70,0x00,0x00,0x00
,0x00,0x00,0x03,0x80,0x01,0x80,0x1e,0x00,0x60,0x00,0xf0,0x00,0x00,0x00
,0x00,0x00,0x03,0xc0,0x00,0xe0,0x1e,0x01,0xc0,0x00,0xe0,0x00,0x00,0x00
,0x00,0x00,0x01,0xc0,0x00,0x70,0x1e,0x07,0x00,0x00,0xe0,0x00,0x00,0x00
,0x00,0x00,0x01,0xe0,0x00,0x1c,0x3f,0x0e,0x00,0x01,0xe0,0x00,0x00,0x00
,0x00,0x00,0x01,0xf0,0x00,0x0e,0x7f,0x9c,0x00,0x03,0xc0,0x00,0x00,0x00
,0x00,0x00,0x00,0xf0,0x00,0x07,0xff,0xf8,0x00,0x03,0xc0,0x00,0x00,0x00
,0x00,0x00,0x00,0xf8,0x00,0x03,0xff,0xf0,0x00,0x07,0x80,0x00,0x00,0x00
,0x00,0x00,0x00,0x7c,0x00,0x03,0xff,0xe0,0x00,0x0f,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x3c,0x00,0x03,0xff,0xf0,0x00,0x0e,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x1f,0x00,0x07,0xff,0xf8,0x00,0x7e,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x0f,0x80,0x0f,0xff,0xfc,0x00,0x7c,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x07,0xf0,0x3f,0xff,0xff,0x03,0xf0,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x03,0xff,0xff,0xc1,0xff,0xff,0xe0,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x03,0xff,0xfe,0x00,0x3f,0xff,0xc0,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x07,0xe0,0x38,0x00,0x1e,0x07,0xe0,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x0f,0x80,0x30,0x00,0x0e,0x01,0xf0,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x1f,0x00,0x70,0x00,0x06,0x00,0x78,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x1e,0x00,0xe0,0x00,0x03,0x00,0x3c,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x3c,0x01,0xe0,0x00,0x03,0x80,0x1e,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x78,0x03,0xf0,0x00,0x07,0xc0,0x1e,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x78,0x07,0xf8,0x00,0x07,0xe0,0x0f,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x70,0x0f,0xfc,0x00,0x1f,0xf0,0x0f,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0xf0,0x1f,0xff,0x80,0x7f,0xfc,0x07,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0xf0,0x3f,0x8f,0xff,0xf0,0x3e,0x07,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0xe0,0xfc,0x01,0xff,0xc0,0x0f,0x07,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0xe1,0xf0,0x00,0xff,0x80,0x07,0xc7,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0xff,0xe0,0x00,0x7f,0x00,0x03,0xf7,0x80,0x00,0x00,0x00
,0x00,0x00,0x01,0xff,0xc0,0x00,0x3f,0x00,0x01,0xff,0xc0,0x00,0x00,0x00
,0x00,0x00,0x03,0xff,0x80,0x00,0x3e,0x00,0x00,0xff,0xe0,0x00,0x00,0x00
,0x00,0x00,0x07,0xdf,0x80,0x00,0x1e,0x00,0x00,0xf9,0xf0,0x00,0x00,0x00
,0x00,0x00,0x0f,0x8f,0x00,0x00,0x1e,0x00,0x00,0x70,0xf8,0x00,0x00,0x00
,0x00,0x00,0x0f,0x07,0x00,0x00,0x1e,0x00,0x00,0x70,0x78,0x00,0x00,0x00
,0x00,0x00,0x1e,0x07,0x00,0x00,0x1e,0x00,0x00,0x30,0x3c,0x00,0x00,0x00
,0x00,0x00,0x1c,0x06,0x00,0x00,0x1e,0x00,0x00,0x30,0x1c,0x00,0x00,0x00
,0x00,0x00,0x3c,0x06,0x00,0x00,0x1e,0x00,0x00,0x30,0x1e,0x00,0x00,0x00
,0x00,0x00,0x38,0x06,0x00,0x00,0x3e,0x00,0x00,0x30,0x1e,0x00,0x00,0x00
,0x00,0x00,0x38,0x06,0x00,0x00,0x3f,0x00,0x00,0x30,0x0e,0x00,0x00,0x00
,0x00,0x00,0x38,0x07,0x00,0x00,0x3f,0x00,0x00,0x70,0x0e,0x00,0x00,0x00
,0x00,0x00,0x38,0x0f,0x00,0x00,0x7f,0x80,0x00,0x70,0x0e,0x00,0x00,0x00
,0x00,0x00,0x38,0x0f,0x00,0x00,0xff,0xc0,0x00,0x78,0x0e,0x00,0x00,0x00
,0x00,0x00,0x38,0x0f,0x80,0x01,0xff,0xe0,0x00,0xf8,0x0e,0x00,0x00,0x00
,0x00,0x00,0x38,0x0f,0xc0,0x03,0xff,0xf0,0x01,0xf8,0x1e,0x00,0x00,0x00
,0x00,0x00,0x3c,0x0f,0xe0,0x07,0xc0,0xfc,0x03,0xf8,0x1e,0x00,0x00,0x00
,0x00,0x00,0x3c,0x1f,0xfc,0x3e,0x00,0x3f,0xff,0xfc,0x3c,0x00,0x00,0x00
,0x00,0x00,0x1e,0x1f,0xff,0xfc,0x00,0x1f,0xff,0xfc,0x3c,0x00,0x00,0x00
,0x00,0x00,0x1e,0x3f,0xff,0xf8,0x00,0x0f,0xff,0xc6,0x78,0x00,0x00,0x00
,0x00,0x00,0x0f,0xff,0xff,0xf1,0xff,0xc7,0xfe,0x03,0xf0,0x00,0x00,0x00
,0x00,0x00,0x07,0xf0,0x7f,0xe1,0xff,0xe3,0xfc,0x01,0xf0,0x00,0x00,0x00
,0x00,0x00,0x07,0xe0,0x1f,0xe1,0xc0,0xe3,0xf8,0x01,0xe0,0x00,0x00,0x00
,0x00,0x00,0x03,0xc0,0x0f,0xe1,0xc0,0xe1,0xf0,0x01,0xe0,0x00,0x00,0x00
,0x00,0x00,0x03,0xc0,0x07,0xc1,0xc0,0xe1,0xe0,0x01,0xe0,0x00,0x00,0x00
,0x00,0x00,0x03,0xc0,0x03,0xc1,0xff,0xc1,0xc0,0x01,0xe0,0x00,0x00,0x00
,0x00,0x00,0x01,0xc0,0x01,0xc1,0xff,0xc1,0xc0,0x01,0xc0,0x00,0x00,0x00
,0x00,0x00,0x01,0xc0,0x01,0xe1,0xc1,0xe1,0x80,0x01,0xc0,0x00,0x00,0x00
,0x00,0x00,0x01,0xe0,0x00,0xe1,0xc0,0xe3,0x80,0x01,0xc0,0x00,0x00,0x00
,0x00,0x00,0x01,0xe0,0x00,0xe1,0xc0,0xe3,0x00,0x01,0xc0,0x00,0x00,0x00
,0x00,0x00,0x00,0xe0,0x00,0x70,0x00,0x07,0x00,0x03,0xc0,0x00,0x00,0x00
,0x00,0x00,0x00,0xf0,0x00,0x78,0x00,0x0f,0x00,0x03,0x80,0x00,0x00,0x00
,0x00,0x00,0x00,0xf0,0x00,0x7c,0x00,0x1f,0x00,0x07,0x80,0x00,0x00,0x00
,0x00,0x00,0x00,0x78,0x00,0x7e,0x00,0x3f,0x00,0x0f,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x3c,0x00,0x7f,0xe3,0xff,0x00,0x1f,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x3e,0x00,0x7f,0xff,0xff,0x00,0x3e,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x1f,0x80,0xff,0xff,0xff,0x00,0xfc,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x0f,0xe1,0xff,0x80,0x3f,0xc3,0xf8,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x03,0xff,0xf8,0x00,0x07,0xff,0xf0,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x01,0xff,0xf0,0x00,0x03,0xff,0xc0,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x7f,0xe0,0x00,0x01,0xff,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x1f,0xe0,0x00,0x03,0xfc,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x0f,0xf0,0x00,0x03,0xf0,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x03,0xf8,0x00,0x07,0xc0,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x7c,0x00,0x1f,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x3f,0x00,0x7e,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1f,0xff,0xfc,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x07,0xff,0xf8,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xe0,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x01,0xff,0xf0,0x7f,0xfe,0x1f,0xff,0x0f,0x0f,0x8f,0xff,0x9f,0xff,0xa0
,0x01,0xff,0xf8,0xff,0xff,0x3f,0xff,0x8f,0x1f,0x0f,0xff,0x9f,0xff,0x80
,0x01,0xe0,0x7c,0xf8,0x1f,0x3c,0x07,0x8f,0x3e,0x0f,0x00,0x00,0xf0,0x00
,0x01,0xe0,0x3c,0xf0,0x0f,0x3c,0x00,0x0f,0xfc,0x0f,0x00,0x00,0xf0,0x00
,0x01,0xe0,0x7c,0xf0,0x0f,0x3c,0x00,0x0f,0xf8,0x0f,0xff,0x80,0xf0,0x00
,0x01,0xff,0xf8,0xf0,0x0f,0x3c,0x00,0x0f,0xfc,0x0f,0xff,0x80,0xf0,0x00
,0x01,0xff,0xf8,0xf0,0x0f,0x3c,0x07,0x8f,0x3e,0x0f,0x00,0x00,0xf0,0x00
,0x01,0xe0,0x78,0xf8,0x1f,0x3f,0xff,0x8f,0x1f,0x0f,0x00,0x00,0xf0,0x00
,0x01,0xe0,0x7c,0xff,0xff,0x1f,0xff,0x0f,0x0f,0x8f,0xff,0x80,0xf0,0x00
,0x01,0xe0,0x3c,0x7f,0xfe,0x0f,0xfe,0x0f,0x07,0x8f,0xff,0x80,0xf0,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x01,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x01,0xe1,0xc7,0x0e,0x1c,0x38,0x70,0xe0,0x11,0x11,0x03,0x09,0x0e,0x00
,0x01,0xe3,0xc7,0x0e,0x1c,0x78,0xf1,0x10,0x1f,0x11,0x07,0x8d,0x11,0x00
,0x01,0x00,0x44,0x09,0x10,0x08,0x11,0x10,0x15,0x11,0x04,0x8b,0x11,0x00
,0x01,0xe3,0x84,0x09,0x1c,0x70,0xe0,0xe0,0x15,0x11,0xc4,0x89,0x0e,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00]


# Activation du bus SPI
spi = spidev.SpiDev() #nouvel objet SPI
spi.open(0,0) # sur port SPI 0 CS 0
spi.max_speed_hz = 15000000 #200000 #15000000 # vitesse = 200 KHz pour le digole (max 15000000)
spi.bits_per_word = 8 #8 bits per word
spi.lsbfirst = False #MSB bits
spi.mode = 0 #mode SPI O

#- Envoie une commande (string)
def sendCmd(buf):
	for c in buf:
		spi.writebytes([ord(c)])

def sendCmd2Flash(buf,decal):
	a = decal + 1
	for c in buf:
		spi.writebytes([c])
		if(a >= 64):
			time.sleep(0.15)
			a = 1
		else:
			a = a+1
#		print a

#- Envoie une commande (valeur)
def sendVal(val):
	spi.writebytes([val])

#- Envoie plusieurs valeurs
def sendVals(val):
	for v in val:
		spi.writebytes([v])

#- Efface l'ecran		
def clearScreen():
	sendCmd("CL")

#- Affiche un texte a l'ecran
def printText(txt):
	sendCmd("TT")
	sendCmd(txt)
	sendVal(0)

#- Affiche un texte a l'ecran (avec position)
def printText2(x,y,txt):
	setCursor(x,y)
	sendCmd("TT")
	sendCmd(txt)
	sendVal(0)

#- Affiche un texte a l'ecran (avec position)
def printTextP(x,y,txt):
	setCursorP(x,y)
	sendCmd("TT")
	sendCmd(txt)
	sendVal(0)

#- Change le curseur (position)
def setCursor(x,y):
        sendCmd("TP")
        sendVal(x)
        sendVal(y)

#- Change le curseur (pixels)
def setCursorP(x,y):
        sendCmd("ETP")
        sendVal(x)
        sendVal(y)

def setCursorLastPos():
	sendCmd("ETB")

#- Dessine un pixel
def drawPixel(x,y):
        sendCmd("DP")
        sendVal(x)
        sendVal(y)

#- Dessine une ligne
def drawLine(x,y,x2,y2):
        sendCmd("LN")
        sendVal(x)
        sendVal(y)
        sendVal(x2)
        sendVal(y2)

#- Dessine un carre
def drawRect(x,y,x2,y2):
        sendCmd("DR")
        sendVal(x)
        sendVal(y)
        sendVal(x2)
        sendVal(y2)

#- Remplit un carre
def fillRect(x,y,x2,y2):
        sendCmd("FR")
        sendVal(x)
        sendVal(y)
        sendVal(x2)
        sendVal(y2)

#- Dessine ou remplit un cercle
def drawCircle(x,y,r,f):
        sendCmd("CC")
        sendVal(x)
        sendVal(y)
        sendVal(r)
        sendVal(f)

#- Affiche une image noir et blanc
def drawPic(x,y,w,h,data):
        sendCmd("DIM")
        sendVal(x)
        sendVal(y)
        sendVal(w)
        sendVal(h)
        sendVals(data)
#- Affiche une image NB prise d'un fichier
def drawPic2(x,y,w,h,data):
        sendCmd("DIM")
        sendVal(x)
        sendVal(y)
        sendVal(w)
        sendVal(h)
        sendCmd(data)
#Affiche une image couleur prise d'un fichier
def drawPic3(x,y,w,h,data):
        sendCmd("EDIM1")
        sendVal(x)
        sendVal(y)
        sendVal(w)
        sendVal(h)
        sendCmd(data)


#- Change la font
def setFont(f):
        sendCmd("SF")
        sendVal(f)

#- allume ou eteint l'ecran
def setScreen(on):
        sendCmd("SOO")
        sendVal(on)

#- change la couleur de dessin
def setFGcolor(c):
        sendCmd("SC")
        sendVal(c)

#- change la couleur du background
def setBGcolor():
        sendCmd("BGC")


#- change la couleur de dessin
def setDrawMode(m):
        sendCmd("DM")
        sendCmd(m)
	
#- change l'ecran d'accueil
def setWelcomeScreen(bitm):
	sendCmd("SSS")
	#compute bmp length
	fl=len(bitm)+9
	print "len+9=",fl
	fl1,fl2=convert(fl)
	print "len conv=",hex(fl1),"-",hex(fl2)
	f2=fl+2
	f21,f22=convert(f2)
	print "len conv2=",hex(f21),"-",hex(f22)

	#send first size
	sendVals([f22,f21])
	time.sleep(0.300)
	#send second size
	sendVals([fl1,fl2])	
	#send commands
	sendCmd("CLDIM")
	sendVal(25)
	sendVal(0)
	sendVal(110)
	sendVal(120)
	#send bitmap
	sendCmd2Flash(bitm,11)
	time.sleep(0.300)
	sendVal(255)
	
	#sleep 3 seconds
	time.sleep(3)
	
	#verify
	sendCmd("DSS")	
	sendVal(255)
	

#convert 16bit integer to two 8bit integers
def convert(int32_val):
    bin = np.binary_repr(int32_val, width = 32) 
    int8_arr = [int(bin[0:8],2), int(bin[8:16],2), 
                int(bin[16:24],2), int(bin[24:32],2)]
    return int8_arr[2],int8_arr[3] 

def downloadFont(myfont,fontnum):
	clearScreen()
	#compute font lenght
	fl=len(myfont)
	print "len=",fl
	fl1,fl2=convert(fl)
	print "len conv=",hex(fl1),"-",hex(fl2)
	#send command
	sendCmd("SUF")
	#custom font number
	sendVal(fontnum)
	time.sleep(0.300)
	#send length
	sendVals([fl2,fl1])
	#send font data to flash
	sendCmd2Flash(myfont,0)
	#sleep at least 3 seconds after flash
	time.sleep(3)


#---------------------
#------ MAIN ---------
#---------------------
setWelcomeScreen(welcomelogo)

			
